---
interface Props {
  title: string;
  description: string;
  image: string;
  imageAlt?: string;
  tags: string[];
  href: string;
  featured?: boolean;
}

const { 
  title, 
  description, 
  image, 
  imageAlt = title, 
  tags, 
  href, 
  featured = false 
} = Astro.props;
---

<article class={`group relative rounded-xl border border-opacity-20 overflow-hidden hover:border-opacity-40 transition-all duration-300 hover:translate-y-[-2px] ${featured ? 'md:col-span-2 md:row-span-2' : ''}`} style="background: linear-gradient(135deg, var(--color-surface) 0%, var(--color-background) 100%); border-color: var(--color-border);">
  <!-- Top light effect -->
  <div class="absolute top-0 left-0 right-0 h-px bg-gradient-to-r from-transparent via-white to-transparent opacity-20"></div>
  <a href={href} class="block h-full">
    <div class={`aspect-video overflow-hidden ${featured ? 'md:aspect-[2/1]' : ''}`}>
      <img
        src={image}
        alt={imageAlt}
        class="w-full h-full object-cover group-hover:scale-[1.02] transition-transform duration-500 ease-out"
        loading="lazy"
      />
      {featured && (
        <div class="absolute top-3 left-3">
          <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium backdrop-blur-sm" style="background-color: rgba(59, 130, 246, 0.9); color: white;">
            Featured
          </span>
        </div>
      )}
    </div>

    <div class="p-5">
      <div class="flex flex-wrap gap-1.5 mb-3">
        {tags.map((tag) => (
          <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium border border-opacity-30" style="background-color: var(--color-background); color: var(--color-text-muted); border-color: var(--color-border);">
            {tag}
          </span>
        ))}
      </div>

      <h3 class={`font-semibold group-hover:opacity-90 transition-all mb-2 ${featured ? 'text-xl md:text-2xl' : 'text-lg'}`} style="color: var(--color-text-primary);">
        {title}
      </h3>

      <p class={`leading-relaxed ${featured ? 'text-base' : 'text-sm'}`} style="color: var(--color-text-secondary);">
        {description}
      </p>

      <div class="mt-4 flex items-center text-sm font-medium group-hover:translate-x-1 transition-all duration-200" style="color: var(--color-accent);">
        View project
        <svg class="ml-1.5 h-3.5 w-3.5 opacity-70" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M17 8l4 4m0 0l-4 4m4-4H3" />
        </svg>
      </div>
    </div>
  </a>
</article>